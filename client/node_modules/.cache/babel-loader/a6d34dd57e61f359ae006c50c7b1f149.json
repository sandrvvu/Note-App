{"ast":null,"code":"var _jsxFileName = \"C:\\\\kpii\\\\KYRSACH\\\\note_app\\\\client\\\\src\\\\components\\\\AppRoute.js\";\n//import React, {useContext} from 'react';\nimport React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { authRoutes, publicRoutes } from \"../routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  const isAuth = false;\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [isAuth && authRoutes.map(_ref => {\n      let {\n        path,\n        Component\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: path,\n        element: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 58\n        }, this)\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this);\n    }), publicRoutes.map(_ref2 => {\n      let {\n        path,\n        Component\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: path,\n        element: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 56\n        }, this)\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n};\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"names":["React","Routes","Route","authRoutes","publicRoutes","AppRouter","isAuth","map","path","Component"],"sources":["C:/kpii/KYRSACH/note_app/client/src/components/AppRoute.js"],"sourcesContent":["//import React, {useContext} from 'react';\r\nimport React from \"react\";\r\nimport { \r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { authRoutes, publicRoutes } from \"../routes\";\r\n\r\nconst AppRouter = () => {\r\n  const isAuth = false;\r\n  return (\r\n    \r\n      <Routes>\r\n        {isAuth &&\r\n          authRoutes.map(({ path, Component }) => \r\n            <Route exact key={path} path={path} element={<Component/>} />\r\n          )}\r\n        {publicRoutes.map(({ path, Component }) => \r\n          <Route exact key={path} path={path} element={<Component/>} />\r\n        )}\r\n      </Routes>\r\n    \r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,KAFF,QAGO,kBAHP;AAIA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,WAAzC;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EACtB,MAAMC,MAAM,GAAG,KAAf;EACA,oBAEI,QAAC,MAAD;IAAA,WACGA,MAAM,IACLH,UAAU,CAACI,GAAX,CAAe;MAAA,IAAC;QAAEC,IAAF;QAAQC;MAAR,CAAD;MAAA,oBACb,QAAC,KAAD;QAAO,KAAK,MAAZ;QAAwB,IAAI,EAAED,IAA9B;QAAoC,OAAO,eAAE,QAAC,SAAD;UAAA;UAAA;UAAA;QAAA;MAA7C,GAAkBA,IAAlB;QAAA;QAAA;QAAA;MAAA,QADa;IAAA,CAAf,CAFJ,EAKGJ,YAAY,CAACG,GAAb,CAAiB;MAAA,IAAC;QAAEC,IAAF;QAAQC;MAAR,CAAD;MAAA,oBAChB,QAAC,KAAD;QAAO,KAAK,MAAZ;QAAwB,IAAI,EAAED,IAA9B;QAAoC,OAAO,eAAE,QAAC,SAAD;UAAA;UAAA;UAAA;QAAA;MAA7C,GAAkBA,IAAlB;QAAA;QAAA;QAAA;MAAA,QADgB;IAAA,CAAjB,CALH;EAAA;IAAA;IAAA;IAAA;EAAA,QAFJ;AAaD,CAfD;;KAAMH,S;AAiBN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}