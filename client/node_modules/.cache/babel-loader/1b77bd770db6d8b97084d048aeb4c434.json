{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/batch\n */\nimport { logWarning } from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * A batch instance groups model changes ({@link module:engine/model/operation/operation~Operation operations}). All operations\n * grouped in a single batch can be reverted together, so you can also think about a batch as of a single undo step. If you want\n * to extend a given undo step, you can add more changes to the batch using {@link module:engine/model/model~Model#enqueueChange}:\n *\n *\t\tmodel.enqueueChange( batch, writer => {\n *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n *\t\t} );\n *\n * @see module:engine/model/model~Model#enqueueChange\n * @see module:engine/model/model~Model#change\n */\n\nexport default class Batch {\n  /**\n   * Creates a batch instance.\n   *\n   * @see module:engine/model/model~Model#enqueueChange\n   * @see module:engine/model/model~Model#change\n   * @param {Object} [type] A set of flags that specify the type of the batch. Batch type can alter how some of the features work\n   * when encountering a given `Batch` instance (for example, when a feature listens to applied operations).\n   * @param {Boolean} [type.isUndoable=true] Whether a batch can be undone through undo feature.\n   * @param {Boolean} [type.isLocal=true] Whether a batch includes operations created locally (`true`) or operations created on\n   * other, remote editors (`false`).\n   * @param {Boolean} [type.isUndo=false] Whether a batch was created by the undo feature and undoes other operations.\n   * @param {Boolean} [type.isTyping=false] Whether a batch includes operations connected with a typing action.\n   */\n  constructor() {\n    let type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (typeof type === 'string') {\n      type = type === 'transparent' ? {\n        isUndoable: false\n      } : {};\n      /**\n       * The string value for a `type` property of the `Batch` constructor has been deprecated and will be removed in the near future.\n       * Please refer to the {@link module:engine/model/batch~Batch#constructor `Batch` constructor API documentation} for more\n       * information.\n       *\n       * @error batch-constructor-deprecated-string-type\n       */\n\n      logWarning('batch-constructor-deprecated-string-type');\n    }\n\n    const {\n      isUndoable = true,\n      isLocal = true,\n      isUndo = false,\n      isTyping = false\n    } = type;\n    /**\n     * An array of operations that compose this batch.\n     *\n     * @readonly\n     * @type {Array.<module:engine/model/operation/operation~Operation>}\n     */\n\n    this.operations = [];\n    /**\n     * Whether the batch can be undone through the undo feature.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n    this.isUndoable = isUndoable;\n    /**\n     * Whether the batch includes operations created locally (`true`) or operations created on other, remote editors (`false`).\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n    this.isLocal = isLocal;\n    /**\n     * Whether the batch was created by the undo feature and undoes other operations.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n    this.isUndo = isUndo;\n    /**\n     * Whether the batch includes operations connected with typing.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n    this.isTyping = isTyping;\n  }\n  /**\n   * The type of the batch.\n   *\n   * **This property has been deprecated and is always set to the `'default'` value.**\n   *\n   * It can be one of the following values:\n   * * `'default'` &ndash; All \"normal\" batches. This is the most commonly used type.\n   * * `'transparent'` &ndash; A batch that should be ignored by other features, i.e. an initial batch or collaborative editing\n   * changes.\n   *\n   * @deprecated\n   * @type {'default'}\n   */\n\n\n  get type() {\n    /**\n     * The {@link module:engine/model/batch~Batch#type `Batch#type` } property has been deprecated and will be removed in the near\n     * future. Use `Batch#isLocal`, `Batch#isUndoable`, `Batch#isUndo` and `Batch#isTyping` instead.\n     *\n     * @error batch-type-deprecated\n     */\n    logWarning('batch-type-deprecated');\n    return 'default';\n  }\n  /**\n   * Returns the base version of this batch, which is equal to the base version of the first operation in the batch.\n   * If there are no operations in the batch or neither operation has the base version set, it returns `null`.\n   *\n   * @readonly\n   * @type {Number|null}\n   */\n\n\n  get baseVersion() {\n    for (const op of this.operations) {\n      if (op.baseVersion !== null) {\n        return op.baseVersion;\n      }\n    }\n\n    return null;\n  }\n  /**\n   * Adds an operation to the batch instance.\n   *\n   * @param {module:engine/model/operation/operation~Operation} operation An operation to add.\n   * @returns {module:engine/model/operation/operation~Operation} The added operation.\n   */\n\n\n  addOperation(operation) {\n    operation.batch = this;\n    this.operations.push(operation);\n    return operation;\n  }\n\n}","map":{"version":3,"names":["logWarning","Batch","constructor","type","isUndoable","isLocal","isUndo","isTyping","operations","baseVersion","op","addOperation","operation","batch","push"],"sources":["C:/kpii/KYRSACH/note_app/client/node_modules/@ckeditor/ckeditor5-engine/src/model/batch.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/batch\n */\n\nimport { logWarning } from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * A batch instance groups model changes ({@link module:engine/model/operation/operation~Operation operations}). All operations\n * grouped in a single batch can be reverted together, so you can also think about a batch as of a single undo step. If you want\n * to extend a given undo step, you can add more changes to the batch using {@link module:engine/model/model~Model#enqueueChange}:\n *\n *\t\tmodel.enqueueChange( batch, writer => {\n *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n *\t\t} );\n *\n * @see module:engine/model/model~Model#enqueueChange\n * @see module:engine/model/model~Model#change\n */\nexport default class Batch {\n\t/**\n\t * Creates a batch instance.\n\t *\n\t * @see module:engine/model/model~Model#enqueueChange\n\t * @see module:engine/model/model~Model#change\n\t * @param {Object} [type] A set of flags that specify the type of the batch. Batch type can alter how some of the features work\n\t * when encountering a given `Batch` instance (for example, when a feature listens to applied operations).\n\t * @param {Boolean} [type.isUndoable=true] Whether a batch can be undone through undo feature.\n\t * @param {Boolean} [type.isLocal=true] Whether a batch includes operations created locally (`true`) or operations created on\n\t * other, remote editors (`false`).\n\t * @param {Boolean} [type.isUndo=false] Whether a batch was created by the undo feature and undoes other operations.\n\t * @param {Boolean} [type.isTyping=false] Whether a batch includes operations connected with a typing action.\n\t */\n\tconstructor( type = {} ) {\n\t\tif ( typeof type === 'string' ) {\n\t\t\ttype = type === 'transparent' ? { isUndoable: false } : {};\n\n\t\t\t/**\n\t\t\t * The string value for a `type` property of the `Batch` constructor has been deprecated and will be removed in the near future.\n\t\t\t * Please refer to the {@link module:engine/model/batch~Batch#constructor `Batch` constructor API documentation} for more\n\t\t\t * information.\n\t\t\t *\n\t\t\t * @error batch-constructor-deprecated-string-type\n\t\t\t */\n\t\t\tlogWarning( 'batch-constructor-deprecated-string-type' );\n\t\t}\n\n\t\tconst { isUndoable = true, isLocal = true, isUndo = false, isTyping = false } = type;\n\n\t\t/**\n\t\t * An array of operations that compose this batch.\n\t\t *\n\t\t * @readonly\n\t\t * @type {Array.<module:engine/model/operation/operation~Operation>}\n\t\t */\n\t\tthis.operations = [];\n\n\t\t/**\n\t\t * Whether the batch can be undone through the undo feature.\n\t\t *\n\t\t * @readonly\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.isUndoable = isUndoable;\n\n\t\t/**\n\t\t * Whether the batch includes operations created locally (`true`) or operations created on other, remote editors (`false`).\n\t\t *\n\t\t * @readonly\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.isLocal = isLocal;\n\n\t\t/**\n\t\t * Whether the batch was created by the undo feature and undoes other operations.\n\t\t *\n\t\t * @readonly\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.isUndo = isUndo;\n\n\t\t/**\n\t\t * Whether the batch includes operations connected with typing.\n\t\t *\n\t\t * @readonly\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.isTyping = isTyping;\n\t}\n\n\t/**\n\t * The type of the batch.\n\t *\n\t * **This property has been deprecated and is always set to the `'default'` value.**\n\t *\n\t * It can be one of the following values:\n\t * * `'default'` &ndash; All \"normal\" batches. This is the most commonly used type.\n\t * * `'transparent'` &ndash; A batch that should be ignored by other features, i.e. an initial batch or collaborative editing\n\t * changes.\n\t *\n\t * @deprecated\n\t * @type {'default'}\n\t */\n\tget type() {\n\t\t/**\n\t\t * The {@link module:engine/model/batch~Batch#type `Batch#type` } property has been deprecated and will be removed in the near\n\t\t * future. Use `Batch#isLocal`, `Batch#isUndoable`, `Batch#isUndo` and `Batch#isTyping` instead.\n\t\t *\n\t\t * @error batch-type-deprecated\n\t\t */\n\t\tlogWarning( 'batch-type-deprecated' );\n\n\t\treturn 'default';\n\t}\n\n\t/**\n\t * Returns the base version of this batch, which is equal to the base version of the first operation in the batch.\n\t * If there are no operations in the batch or neither operation has the base version set, it returns `null`.\n\t *\n\t * @readonly\n\t * @type {Number|null}\n\t */\n\tget baseVersion() {\n\t\tfor ( const op of this.operations ) {\n\t\t\tif ( op.baseVersion !== null ) {\n\t\t\t\treturn op.baseVersion;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Adds an operation to the batch instance.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation An operation to add.\n\t * @returns {module:engine/model/operation/operation~Operation} The added operation.\n\t */\n\taddOperation( operation ) {\n\t\toperation.batch = this;\n\t\tthis.operations.push( operation );\n\n\t\treturn operation;\n\t}\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,SAASA,UAAT,QAA2B,6CAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,KAAN,CAAY;EAC1B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCC,WAAW,GAAc;IAAA,IAAZC,IAAY,uEAAL,EAAK;;IACxB,IAAK,OAAOA,IAAP,KAAgB,QAArB,EAAgC;MAC/BA,IAAI,GAAGA,IAAI,KAAK,aAAT,GAAyB;QAAEC,UAAU,EAAE;MAAd,CAAzB,GAAiD,EAAxD;MAEA;AACH;AACA;AACA;AACA;AACA;AACA;;MACGJ,UAAU,CAAE,0CAAF,CAAV;IACA;;IAED,MAAM;MAAEI,UAAU,GAAG,IAAf;MAAqBC,OAAO,GAAG,IAA/B;MAAqCC,MAAM,GAAG,KAA9C;MAAqDC,QAAQ,GAAG;IAAhE,IAA0EJ,IAAhF;IAEA;AACF;AACA;AACA;AACA;AACA;;IACE,KAAKK,UAAL,GAAkB,EAAlB;IAEA;AACF;AACA;AACA;AACA;AACA;;IACE,KAAKJ,UAAL,GAAkBA,UAAlB;IAEA;AACF;AACA;AACA;AACA;AACA;;IACE,KAAKC,OAAL,GAAeA,OAAf;IAEA;AACF;AACA;AACA;AACA;AACA;;IACE,KAAKC,MAAL,GAAcA,MAAd;IAEA;AACF;AACA;AACA;AACA;AACA;;IACE,KAAKC,QAAL,GAAgBA,QAAhB;EACA;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACS,IAAJJ,IAAI,GAAG;IACV;AACF;AACA;AACA;AACA;AACA;IACEH,UAAU,CAAE,uBAAF,CAAV;IAEA,OAAO,SAAP;EACA;EAED;AACD;AACA;AACA;AACA;AACA;AACA;;;EACgB,IAAXS,WAAW,GAAG;IACjB,KAAM,MAAMC,EAAZ,IAAkB,KAAKF,UAAvB,EAAoC;MACnC,IAAKE,EAAE,CAACD,WAAH,KAAmB,IAAxB,EAA+B;QAC9B,OAAOC,EAAE,CAACD,WAAV;MACA;IACD;;IAED,OAAO,IAAP;EACA;EAED;AACD;AACA;AACA;AACA;AACA;;;EACCE,YAAY,CAAEC,SAAF,EAAc;IACzBA,SAAS,CAACC,KAAV,GAAkB,IAAlB;IACA,KAAKL,UAAL,CAAgBM,IAAhB,CAAsBF,SAAtB;IAEA,OAAOA,SAAP;EACA;;AA5HyB"},"metadata":{},"sourceType":"module"}