{"ast":null,"code":"var _jsxFileName = \"C:\\\\kpii\\\\KYRSACH\\\\note_app\\\\client\\\\src\\\\pages\\\\Note.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getNote, updateNote } from '../apiCalls/notes';\nimport { createTag, getAllTags } from '../apiCalls/tags';\nimport Layout from '../components/Layout';\nimport Editor from '../components/TextEditor/CKEditor';\nimport NoteToolbar from '../components/Toolbar/Note';\nimport useOnClickOutside from '../utils/useClickOutside';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AUTOSAVE_INTERVAL = 1000;\n\nconst NotePage = () => {\n  _s();\n\n  const location = useLocation();\n  const id = location.pathname.split('/')[2];\n  const [note, setNote] = useState([]);\n  const [name, setName] = useState('');\n  const [body, setBody] = useState('');\n  const [error, setError] = useState(''); //const [tags, setTags] = useState([])\n  //const [tagsMenu, setTagsMenu] = useState(false)\n  //const [allTags, setAllTags] = useState([])\n  //const [tagsError, setTagsError] = useState()\n  //const [newTag, setNewTag] = useState('')\n\n  const refreshNote = id => {\n    getNote(id).then(res => {\n      setNote(res);\n      setError('');\n    }).catch(err => {\n      setError('Note not found');\n    });\n  };\n\n  useEffect(() => {\n    if (note) {\n      setBody(note.body);\n      setName(note.title);\n    }\n  }, [note]);\n  return /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NotePage, \"SJ39VhhnaFy6Qd+FzbRoVHgNLdM=\", false, function () {\n  return [useLocation];\n});\n\n_c = NotePage;\nexport default NotePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["useEffect","useRef","useState","useLocation","getNote","updateNote","createTag","getAllTags","Layout","Editor","NoteToolbar","useOnClickOutside","AUTOSAVE_INTERVAL","NotePage","location","id","pathname","split","note","setNote","name","setName","body","setBody","error","setError","refreshNote","then","res","catch","err","title"],"sources":["C:/kpii/KYRSACH/note_app/client/src/pages/Note.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { getNote, updateNote } from '../apiCalls/notes'\r\nimport { createTag, getAllTags } from '../apiCalls/tags'\r\n\r\nimport Layout from '../components/Layout'\r\n \r\nimport Editor from '../components/TextEditor/CKEditor'\r\nimport NoteToolbar from '../components/Toolbar/Note'\r\n \r\nimport useOnClickOutside from '../utils/useClickOutside'\r\n \r\n\r\nconst AUTOSAVE_INTERVAL = 1000\r\n\r\nconst NotePage = () => {\r\n  const location = useLocation()\r\n  const id = location.pathname.split('/')[2]\r\n  const [note, setNote] = useState([])\r\n  const [name, setName] = useState('')\r\n  const [body, setBody] = useState('')\r\n  const [error, setError] = useState('')\r\n  //const [tags, setTags] = useState([])\r\n  //const [tagsMenu, setTagsMenu] = useState(false)\r\n  //const [allTags, setAllTags] = useState([])\r\n  //const [tagsError, setTagsError] = useState()\r\n  //const [newTag, setNewTag] = useState('')\r\n \r\n\r\n  const refreshNote = (id) => {\r\n    getNote(id)\r\n      .then(res => {\r\n        setNote(res)\r\n        setError('')\r\n      })\r\n      .catch(err => {\r\n        setError('Note not found')\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (note) {\r\n      setBody(note.body)\r\n      setName(note.title)\r\n    }\r\n  }, [note])\r\n \r\n\r\n  return (\r\n    <Layout>\r\n       \r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default NotePage"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,mBAApC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA,OAAOC,iBAAP,MAA8B,0BAA9B;;AAGA,MAAMC,iBAAiB,GAAG,IAA1B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;EACA,MAAMY,EAAE,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAX;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACoB,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACsB,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAC,EAAD,CAAlC,CANqB,CAOrB;EACA;EACA;EACA;EACA;;EAGA,MAAMwB,WAAW,GAAIX,EAAD,IAAQ;IAC1BX,OAAO,CAACW,EAAD,CAAP,CACGY,IADH,CACQC,GAAG,IAAI;MACXT,OAAO,CAACS,GAAD,CAAP;MACAH,QAAQ,CAAC,EAAD,CAAR;IACD,CAJH,EAKGI,KALH,CAKSC,GAAG,IAAI;MACZL,QAAQ,CAAC,gBAAD,CAAR;IACD,CAPH;EAQD,CATD;;EAWAzB,SAAS,CAAC,MAAM;IACd,IAAIkB,IAAJ,EAAU;MACRK,OAAO,CAACL,IAAI,CAACI,IAAN,CAAP;MACAD,OAAO,CAACH,IAAI,CAACa,KAAN,CAAP;IACD;EACF,CALQ,EAKN,CAACb,IAAD,CALM,CAAT;EAQA,oBACE,QAAC,MAAD;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAtCD;;GAAML,Q;UACaV,W;;;KADbU,Q;AAwCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}