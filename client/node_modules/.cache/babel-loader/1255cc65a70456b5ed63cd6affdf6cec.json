{"ast":null,"code":"var _jsxFileName = \"C:\\\\kpii\\\\KYRSACH\\\\note_app\\\\client\\\\src\\\\components\\\\AppRouter.js\";\n//import React, {useContext} from 'react';\nimport React from \"react\";\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { authRoutes, publicRoutes } from \"../routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  const isAuth = false;\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [isAuth && authRoutes.map(_ref => {\n      let {\n        path,\n        Component\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        element: Component,\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this);\n    }), publicRoutes.map(_ref2 => {\n      let {\n        path,\n        Component\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        element: Component,\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this);\n};\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"names":["React","Switch","Route","Redirect","authRoutes","publicRoutes","AppRouter","isAuth","map","path","Component"],"sources":["C:/kpii/KYRSACH/note_app/client/src/components/AppRouter.js"],"sourcesContent":["//import React, {useContext} from 'react';\r\nimport React from \"react\";\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport { authRoutes, publicRoutes } from \"../routes\";\r\n\r\nconst AppRouter = () => {\r\n  const isAuth = false;\r\n  return (\r\n   \r\n      <Switch>\r\n        {isAuth &&\r\n          authRoutes.map(({ path, Component }) => \r\n            <Route key={path} path={path} element={Component} exact />\r\n        )}\r\n        {publicRoutes.map(({ path, Component }) => \r\n          <Route key={path} path={path} element={Component} exact/>\r\n        )}\r\n        \r\n          \r\n     </Switch>\r\n      \r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAsC,kBAAtC;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,WAAzC;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EACtB,MAAMC,MAAM,GAAG,KAAf;EACA,oBAEI,QAAC,MAAD;IAAA,WACGA,MAAM,IACLH,UAAU,CAACI,GAAX,CAAe;MAAA,IAAC;QAAEC,IAAF;QAAQC;MAAR,CAAD;MAAA,oBACb,QAAC,KAAD;QAAkB,IAAI,EAAED,IAAxB;QAA8B,OAAO,EAAEC,SAAvC;QAAkD,KAAK;MAAvD,GAAYD,IAAZ;QAAA;QAAA;QAAA;MAAA,QADa;IAAA,CAAf,CAFJ,EAKGJ,YAAY,CAACG,GAAb,CAAiB;MAAA,IAAC;QAAEC,IAAF;QAAQC;MAAR,CAAD;MAAA,oBAChB,QAAC,KAAD;QAAkB,IAAI,EAAED,IAAxB;QAA8B,OAAO,EAAEC,SAAvC;QAAkD,KAAK;MAAvD,GAAYD,IAAZ;QAAA;QAAA;QAAA;MAAA,QADgB;IAAA,CAAjB,CALH;EAAA;IAAA;IAAA;IAAA;EAAA,QAFJ;AAeD,CAjBD;;KAAMH,S;AAmBN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}