{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/toolbar/block/blockbuttonview\n */\nimport ButtonView from '../../button/buttonview';\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\nimport '../../../theme/components/toolbar/blocktoolbar.css';\nconst toPx = toUnit('px');\n/**\n * The block button view class.\n *\n * This view represents a button attached next to block element where the selection is anchored.\n *\n * See {@link module:ui/toolbar/block/blocktoolbar~BlockToolbar}.\n *\n * @extends {module:ui/button/buttonview~ButtonView}\n */\n\nexport default class BlockButtonView extends ButtonView {\n  /**\n   * @inheritDoc\n   */\n  constructor(locale) {\n    super(locale);\n    const bind = this.bindTemplate; // Hide button on init.\n\n    this.isVisible = false;\n    this.isToggleable = true;\n    /**\n     * Top offset.\n     *\n     * @member {Number} #top\n     */\n\n    this.set('top', 0);\n    /**\n     * Left offset.\n     *\n     * @member {Number} #left\n     */\n\n    this.set('left', 0);\n    this.extendTemplate({\n      attributes: {\n        class: 'ck-block-toolbar-button',\n        style: {\n          top: bind.to('top', val => toPx(val)),\n          left: bind.to('left', val => toPx(val))\n        }\n      }\n    });\n  }\n\n}","map":{"version":3,"names":["ButtonView","toUnit","toPx","BlockButtonView","constructor","locale","bind","bindTemplate","isVisible","isToggleable","set","extendTemplate","attributes","class","style","top","to","val","left"],"sources":["C:/kpii/KYRSACH/note_app/client/node_modules/@ckeditor/ckeditor5-ui/src/toolbar/block/blockbuttonview.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/toolbar/block/blockbuttonview\n */\n\nimport ButtonView from '../../button/buttonview';\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\nimport '../../../theme/components/toolbar/blocktoolbar.css';\n\nconst toPx = toUnit( 'px' );\n\n/**\n * The block button view class.\n *\n * This view represents a button attached next to block element where the selection is anchored.\n *\n * See {@link module:ui/toolbar/block/blocktoolbar~BlockToolbar}.\n *\n * @extends {module:ui/button/buttonview~ButtonView}\n */\nexport default class BlockButtonView extends ButtonView {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t// Hide button on init.\n\t\tthis.isVisible = false;\n\n\t\tthis.isToggleable = true;\n\n\t\t/**\n\t\t * Top offset.\n\t\t *\n\t\t * @member {Number} #top\n\t\t */\n\t\tthis.set( 'top', 0 );\n\n\t\t/**\n\t\t * Left offset.\n\t\t *\n\t\t * @member {Number} #left\n\t\t */\n\t\tthis.set( 'left', 0 );\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-block-toolbar-button',\n\t\t\t\tstyle: {\n\t\t\t\t\ttop: bind.to( 'top', val => toPx( val ) ),\n\t\t\t\t\tleft: bind.to( 'left', val => toPx( val ) )\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,OAAOA,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AACA,OAAO,oDAAP;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAAE,IAAF,CAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAME,eAAN,SAA8BH,UAA9B,CAAyC;EACvD;AACD;AACA;EACCI,WAAW,CAAEC,MAAF,EAAW;IACrB,MAAOA,MAAP;IAEA,MAAMC,IAAI,GAAG,KAAKC,YAAlB,CAHqB,CAKrB;;IACA,KAAKC,SAAL,GAAiB,KAAjB;IAEA,KAAKC,YAAL,GAAoB,IAApB;IAEA;AACF;AACA;AACA;AACA;;IACE,KAAKC,GAAL,CAAU,KAAV,EAAiB,CAAjB;IAEA;AACF;AACA;AACA;AACA;;IACE,KAAKA,GAAL,CAAU,MAAV,EAAkB,CAAlB;IAEA,KAAKC,cAAL,CAAqB;MACpBC,UAAU,EAAE;QACXC,KAAK,EAAE,yBADI;QAEXC,KAAK,EAAE;UACNC,GAAG,EAAET,IAAI,CAACU,EAAL,CAAS,KAAT,EAAgBC,GAAG,IAAIf,IAAI,CAAEe,GAAF,CAA3B,CADC;UAENC,IAAI,EAAEZ,IAAI,CAACU,EAAL,CAAS,MAAT,EAAiBC,GAAG,IAAIf,IAAI,CAAEe,GAAF,CAA5B;QAFA;MAFI;IADQ,CAArB;EASA;;AArCsD"},"metadata":{},"sourceType":"module"}