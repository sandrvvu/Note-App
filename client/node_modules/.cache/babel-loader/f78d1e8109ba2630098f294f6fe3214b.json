{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/textproxy\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * TextProxy is a wrapper for substring of {@link module:engine/view/text~Text}. Instance of this class is created by\n * {@link module:engine/view/treewalker~TreeWalker} when only a part of {@link module:engine/view/text~Text} needs to be returned.\n *\n * `TextProxy` has an API similar to {@link module:engine/view/text~Text Text} and allows to do most of the common tasks performed\n * on view nodes.\n *\n * **Note:** Some `TextProxy` instances may represent whole text node, not just a part of it.\n * See {@link module:engine/view/textproxy~TextProxy#isPartial}.\n *\n * **Note:** `TextProxy` is a readonly interface.\n *\n * **Note:** `TextProxy` instances are created on the fly basing on the current state of parent {@link module:engine/view/text~Text}.\n * Because of this it is highly unrecommended to store references to `TextProxy instances because they might get\n * invalidated due to operations on Document. Also TextProxy is not a {@link module:engine/view/node~Node} so it can not be\n * inserted as a child of {@link module:engine/view/element~Element}.\n *\n * `TextProxy` instances are created by {@link module:engine/view/treewalker~TreeWalker view tree walker}. You should not need to create\n * an instance of this class by your own.\n */\n\nexport default class TextProxy {\n  /**\n   * Creates a text proxy.\n   *\n   * @protected\n   * @param {module:engine/view/text~Text} textNode Text node which part is represented by this text proxy.\n   * @param {Number} offsetInText Offset in {@link module:engine/view/textproxy~TextProxy#textNode text node}\n   * from which the text proxy starts.\n   * @param {Number} length Text proxy length, that is how many text node's characters, starting from `offsetInText` it represents.\n   * @constructor\n   */\n  constructor(textNode, offsetInText, length) {\n    /**\n     * Reference to the {@link module:engine/view/text~Text} element which TextProxy is a substring.\n     *\n     * @readonly\n     * @member {module:engine/view/text~Text} module:engine/view/textproxy~TextProxy#textNode\n     */\n    this.textNode = textNode;\n\n    if (offsetInText < 0 || offsetInText > textNode.data.length) {\n      /**\n       * Given offsetInText value is incorrect.\n       *\n       * @error view-textproxy-wrong-offsetintext\n       */\n      throw new CKEditorError('view-textproxy-wrong-offsetintext', this);\n    }\n\n    if (length < 0 || offsetInText + length > textNode.data.length) {\n      /**\n       * Given length value is incorrect.\n       *\n       * @error view-textproxy-wrong-length\n       */\n      throw new CKEditorError('view-textproxy-wrong-length', this);\n    }\n    /**\n     * Text data represented by this text proxy.\n     *\n     * @readonly\n     * @member {String} module:engine/view/textproxy~TextProxy#data\n     */\n\n\n    this.data = textNode.data.substring(offsetInText, offsetInText + length);\n    /**\n     * Offset in the `textNode` where this `TextProxy` instance starts.\n     *\n     * @readonly\n     * @member {Number} module:engine/view/textproxy~TextProxy#offsetInText\n     */\n\n    this.offsetInText = offsetInText;\n  }\n  /**\n   * Offset size of this node.\n   *\n   * @readonly\n   * @type {Number}\n   */\n\n\n  get offsetSize() {\n    return this.data.length;\n  }\n  /**\n   * Flag indicating whether `TextProxy` instance covers only part of the original {@link module:engine/view/text~Text text node}\n   * (`true`) or the whole text node (`false`).\n   *\n   * This is `false` when text proxy starts at the very beginning of {@link module:engine/view/textproxy~TextProxy#textNode textNode}\n   * ({@link module:engine/view/textproxy~TextProxy#offsetInText offsetInText} equals `0`) and text proxy sizes is equal to\n   * text node size.\n   *\n   * @readonly\n   * @type {Boolean}\n   */\n\n\n  get isPartial() {\n    return this.data.length !== this.textNode.data.length;\n  }\n  /**\n   * Parent of this text proxy, which is same as parent of text node represented by this text proxy.\n   *\n   * @readonly\n   * @type {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n   */\n\n\n  get parent() {\n    return this.textNode.parent;\n  }\n  /**\n   * Root of this text proxy, which is same as root of text node represented by this text proxy.\n   *\n   * @readonly\n   * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n   */\n\n\n  get root() {\n    return this.textNode.root;\n  }\n  /**\n   * {@link module:engine/view/document~Document View document} that owns this text proxy, or `null` if the text proxy is inside\n   * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n   *\n   * @readonly\n   * @type {module:engine/view/document~Document|null}\n   */\n\n\n  get document() {\n    return this.textNode.document;\n  }\n  /**\n   * Checks whether this object is of the given type.\n   *\n   *\t\ttextProxy.is( '$textProxy' ); // -> true\n   *\t\ttextProxy.is( 'view:$textProxy' ); // -> true\n   *\n   *\t\ttextProxy.is( 'model:$textProxy' ); // -> false\n   *\t\ttextProxy.is( 'element' ); // -> false\n   *\t\ttextProxy.is( 'range' ); // -> false\n   *\n   * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n   *\n   * **Note:** Until version 20.0.0 this method wasn't accepting `'$textProxy'` type. The legacy `'textProxy'` type is still\n   * accepted for backward compatibility.\n   *\n   * @param {String} type Type to check.\n   * @returns {Boolean}\n   */\n\n\n  is(type) {\n    return type === '$textProxy' || type === 'view:$textProxy' || // This are legacy values kept for backward compatibility.\n    type === 'textProxy' || type === 'view:textProxy';\n  }\n  /**\n   * Returns ancestors array of this text proxy.\n   *\n   * @param {Object} options Options object.\n   * @param {Boolean} [options.includeSelf=false] When set to `true` {#textNode} will be also included in parent's array.\n   * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from text proxy parent to\n   * root element, otherwise root element will be the first item in the array.\n   * @returns {Array} Array with ancestors.\n   */\n\n\n  getAncestors() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      includeSelf: false,\n      parentFirst: false\n    };\n    const ancestors = [];\n    let parent = options.includeSelf ? this.textNode : this.parent;\n\n    while (parent !== null) {\n      ancestors[options.parentFirst ? 'push' : 'unshift'](parent);\n      parent = parent.parent;\n    }\n\n    return ancestors;\n  } // @if CK_DEBUG_ENGINE // toString() {\n  // @if CK_DEBUG_ENGINE // \treturn `#${ this.data }`;\n  // @if CK_DEBUG_ENGINE // }\n  // @if CK_DEBUG_ENGINE // log() {\n  // @if CK_DEBUG_ENGINE // \tconsole.log( 'ViewTextProxy: ' + this );\n  // @if CK_DEBUG_ENGINE // }\n  // @if CK_DEBUG_ENGINE // logExtended() {\n  // @if CK_DEBUG_ENGINE // \tconsole.log( 'ViewTextProxy: ' + this );\n  // @if CK_DEBUG_ENGINE // }\n\n\n}","map":{"version":3,"names":["CKEditorError","TextProxy","constructor","textNode","offsetInText","length","data","substring","offsetSize","isPartial","parent","root","document","is","type","getAncestors","options","includeSelf","parentFirst","ancestors"],"sources":["C:/kpii/KYRSACH/note_app/client/node_modules/@ckeditor/ckeditor5-engine/src/view/textproxy.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/textproxy\n */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * TextProxy is a wrapper for substring of {@link module:engine/view/text~Text}. Instance of this class is created by\n * {@link module:engine/view/treewalker~TreeWalker} when only a part of {@link module:engine/view/text~Text} needs to be returned.\n *\n * `TextProxy` has an API similar to {@link module:engine/view/text~Text Text} and allows to do most of the common tasks performed\n * on view nodes.\n *\n * **Note:** Some `TextProxy` instances may represent whole text node, not just a part of it.\n * See {@link module:engine/view/textproxy~TextProxy#isPartial}.\n *\n * **Note:** `TextProxy` is a readonly interface.\n *\n * **Note:** `TextProxy` instances are created on the fly basing on the current state of parent {@link module:engine/view/text~Text}.\n * Because of this it is highly unrecommended to store references to `TextProxy instances because they might get\n * invalidated due to operations on Document. Also TextProxy is not a {@link module:engine/view/node~Node} so it can not be\n * inserted as a child of {@link module:engine/view/element~Element}.\n *\n * `TextProxy` instances are created by {@link module:engine/view/treewalker~TreeWalker view tree walker}. You should not need to create\n * an instance of this class by your own.\n */\nexport default class TextProxy {\n\t/**\n\t * Creates a text proxy.\n\t *\n\t * @protected\n\t * @param {module:engine/view/text~Text} textNode Text node which part is represented by this text proxy.\n\t * @param {Number} offsetInText Offset in {@link module:engine/view/textproxy~TextProxy#textNode text node}\n\t * from which the text proxy starts.\n\t * @param {Number} length Text proxy length, that is how many text node's characters, starting from `offsetInText` it represents.\n\t * @constructor\n\t */\n\tconstructor( textNode, offsetInText, length ) {\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/text~Text} element which TextProxy is a substring.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/text~Text} module:engine/view/textproxy~TextProxy#textNode\n\t\t */\n\t\tthis.textNode = textNode;\n\n\t\tif ( offsetInText < 0 || offsetInText > textNode.data.length ) {\n\t\t\t/**\n\t\t\t * Given offsetInText value is incorrect.\n\t\t\t *\n\t\t\t * @error view-textproxy-wrong-offsetintext\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-textproxy-wrong-offsetintext', this );\n\t\t}\n\n\t\tif ( length < 0 || offsetInText + length > textNode.data.length ) {\n\t\t\t/**\n\t\t\t * Given length value is incorrect.\n\t\t\t *\n\t\t\t * @error view-textproxy-wrong-length\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-textproxy-wrong-length', this );\n\t\t}\n\n\t\t/**\n\t\t * Text data represented by this text proxy.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} module:engine/view/textproxy~TextProxy#data\n\t\t */\n\t\tthis.data = textNode.data.substring( offsetInText, offsetInText + length );\n\n\t\t/**\n\t\t * Offset in the `textNode` where this `TextProxy` instance starts.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} module:engine/view/textproxy~TextProxy#offsetInText\n\t\t */\n\t\tthis.offsetInText = offsetInText;\n\t}\n\n\t/**\n\t * Offset size of this node.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tget offsetSize() {\n\t\treturn this.data.length;\n\t}\n\n\t/**\n\t * Flag indicating whether `TextProxy` instance covers only part of the original {@link module:engine/view/text~Text text node}\n\t * (`true`) or the whole text node (`false`).\n\t *\n\t * This is `false` when text proxy starts at the very beginning of {@link module:engine/view/textproxy~TextProxy#textNode textNode}\n\t * ({@link module:engine/view/textproxy~TextProxy#offsetInText offsetInText} equals `0`) and text proxy sizes is equal to\n\t * text node size.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tget isPartial() {\n\t\treturn this.data.length !== this.textNode.data.length;\n\t}\n\n\t/**\n\t * Parent of this text proxy, which is same as parent of text node represented by this text proxy.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n\t */\n\tget parent() {\n\t\treturn this.textNode.parent;\n\t}\n\n\t/**\n\t * Root of this text proxy, which is same as root of text node represented by this text proxy.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n\t */\n\tget root() {\n\t\treturn this.textNode.root;\n\t}\n\n\t/**\n\t * {@link module:engine/view/document~Document View document} that owns this text proxy, or `null` if the text proxy is inside\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/document~Document|null}\n\t */\n\tget document() {\n\t\treturn this.textNode.document;\n\t}\n\n\t/**\n\t * Checks whether this object is of the given type.\n\t *\n\t *\t\ttextProxy.is( '$textProxy' ); // -> true\n\t *\t\ttextProxy.is( 'view:$textProxy' ); // -> true\n\t *\n\t *\t\ttextProxy.is( 'model:$textProxy' ); // -> false\n\t *\t\ttextProxy.is( 'element' ); // -> false\n\t *\t\ttextProxy.is( 'range' ); // -> false\n\t *\n\t * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n\t *\n\t * **Note:** Until version 20.0.0 this method wasn't accepting `'$textProxy'` type. The legacy `'textProxy'` type is still\n\t * accepted for backward compatibility.\n\t *\n\t * @param {String} type Type to check.\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type === '$textProxy' || type === 'view:$textProxy' ||\n\t\t\t// This are legacy values kept for backward compatibility.\n\t\t\ttype === 'textProxy' || type === 'view:textProxy';\n\t}\n\n\t/**\n\t * Returns ancestors array of this text proxy.\n\t *\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` {#textNode} will be also included in parent's array.\n\t * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from text proxy parent to\n\t * root element, otherwise root element will be the first item in the array.\n\t * @returns {Array} Array with ancestors.\n\t */\n\tgetAncestors( options = { includeSelf: false, parentFirst: false } ) {\n\t\tconst ancestors = [];\n\t\tlet parent = options.includeSelf ? this.textNode : this.parent;\n\n\t\twhile ( parent !== null ) {\n\t\t\tancestors[ options.parentFirst ? 'push' : 'unshift' ]( parent );\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn ancestors;\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `#${ this.data }`;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ViewTextProxy: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logExtended() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ViewTextProxy: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}