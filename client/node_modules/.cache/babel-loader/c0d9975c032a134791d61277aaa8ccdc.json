{"ast":null,"code":"import axios from \"axios\";\nexport const getAllFolder = async ud => {\n  const res = await axios.post(\"http://localhost:5000/api/folder/\", {\n    userId: ud\n  }, {\n    headers: {\n      Authorization: \"Bearer \" + localStorage.token,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  return res.data;\n};\nexport const createFolder = async userid => {\n  const res = await axios.put(\"http://localhost:5000/api/folder/\", {\n    name: \"Untitled\",\n    userId: userid\n  }, {\n    headers: {\n      Authorization: \"Bearer \" + localStorage.token,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  return res.data;\n};\nexport const getFolder = async id => {\n  const res = await axios.get(`http://localhost:5000/api/folder/${id}`, {\n    headers: {\n      Authorization: \"Bearer \" + localStorage.token,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  return res.data;\n};\nexport const updateFolder = async (id, name) => {\n  const res = await axios.post(`http://localhost:5000/api/folder/${id}`, {\n    name: name\n  }, {\n    headers: {\n      Authorization: \"Bearer \" + localStorage.token,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  return res.data;\n};\nexport const deleteFolder = async id => {\n  const res = await axios.delete(`http://localhost:5000/api/folder/${id}`, {\n    headers: {\n      Authorization: \"Bearer \" + localStorage.token,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  return res.data;\n};\nexport const getNoteOfFolder = async id => {\n  const res = await axios.get(`http://localhost:5000/api/folder/${id}/notes`, {\n    headers: {\n      Authorization: \"Bearer \" + localStorage.token,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  return res.data;\n};","map":{"version":3,"names":["axios","getAllFolder","ud","res","post","userId","headers","Authorization","localStorage","token","data","createFolder","userid","put","name","getFolder","id","get","updateFolder","deleteFolder","delete","getNoteOfFolder"],"sources":["C:/kpii/KYRSACH/note_app/client/src/apiCalls/folderApi.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const getAllFolder = async (ud) => {\r\n  const res = await axios.post(\r\n    \"http://localhost:5000/api/folder/\",\r\n    { userId: ud },\r\n    {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n  );\r\n  return res.data;\r\n};\r\n\r\nexport const createFolder = async (userid) => {\r\n  const res = await axios.put(\r\n    \"http://localhost:5000/api/folder/\",\r\n    { name: \"Untitled\", userId: userid },\r\n    {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n  );\r\n  return res.data;\r\n};\r\n\r\nexport const getFolder = async (id) => {\r\n  const res = await axios.get(`http://localhost:5000/api/folder/${id}`, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + localStorage.token,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  return res.data;\r\n};\r\n\r\nexport const updateFolder = async (id, name) => {\r\n  const res = await axios.post(\r\n    `http://localhost:5000/api/folder/${id}`,\r\n    { name: name },\r\n    {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n  );\r\n  return res.data;\r\n};\r\n\r\nexport const deleteFolder = async (id) => {\r\n  const res = await axios.delete(`http://localhost:5000/api/folder/${id}`, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + localStorage.token,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  return res.data;\r\n};\r\n\r\nexport const getNoteOfFolder = async (id) => {\r\n  const res = await axios.get(`http://localhost:5000/api/folder/${id}/notes`, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + localStorage.token,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  return res.data;\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAOC,EAAP,IAAc;EACxC,MAAMC,GAAG,GAAG,MAAMH,KAAK,CAACI,IAAN,CAChB,mCADgB,EAEhB;IAAEC,MAAM,EAAEH;EAAV,CAFgB,EAGhB;IACEI,OAAO,EAAE;MACPC,aAAa,EAAE,YAAYC,YAAY,CAACC,KADjC;MAEP,gBAAgB;IAFT;EADX,CAHgB,CAAlB;EAUA,OAAON,GAAG,CAACO,IAAX;AACD,CAZM;AAcP,OAAO,MAAMC,YAAY,GAAG,MAAOC,MAAP,IAAkB;EAC5C,MAAMT,GAAG,GAAG,MAAMH,KAAK,CAACa,GAAN,CAChB,mCADgB,EAEhB;IAAEC,IAAI,EAAE,UAAR;IAAoBT,MAAM,EAAEO;EAA5B,CAFgB,EAGhB;IACEN,OAAO,EAAE;MACPC,aAAa,EAAE,YAAYC,YAAY,CAACC,KADjC;MAEP,gBAAgB;IAFT;EADX,CAHgB,CAAlB;EAUA,OAAON,GAAG,CAACO,IAAX;AACD,CAZM;AAcP,OAAO,MAAMK,SAAS,GAAG,MAAOC,EAAP,IAAc;EACrC,MAAMb,GAAG,GAAG,MAAMH,KAAK,CAACiB,GAAN,CAAW,oCAAmCD,EAAG,EAAjD,EAAoD;IACpEV,OAAO,EAAE;MACPC,aAAa,EAAE,YAAYC,YAAY,CAACC,KADjC;MAEP,gBAAgB;IAFT;EAD2D,CAApD,CAAlB;EAMA,OAAON,GAAG,CAACO,IAAX;AACD,CARM;AAUP,OAAO,MAAMQ,YAAY,GAAG,OAAOF,EAAP,EAAWF,IAAX,KAAoB;EAC9C,MAAMX,GAAG,GAAG,MAAMH,KAAK,CAACI,IAAN,CACf,oCAAmCY,EAAG,EADvB,EAEhB;IAAEF,IAAI,EAAEA;EAAR,CAFgB,EAGhB;IACER,OAAO,EAAE;MACPC,aAAa,EAAE,YAAYC,YAAY,CAACC,KADjC;MAEP,gBAAgB;IAFT;EADX,CAHgB,CAAlB;EAUA,OAAON,GAAG,CAACO,IAAX;AACD,CAZM;AAcP,OAAO,MAAMS,YAAY,GAAG,MAAOH,EAAP,IAAc;EACxC,MAAMb,GAAG,GAAG,MAAMH,KAAK,CAACoB,MAAN,CAAc,oCAAmCJ,EAAG,EAApD,EAAuD;IACvEV,OAAO,EAAE;MACPC,aAAa,EAAE,YAAYC,YAAY,CAACC,KADjC;MAEP,gBAAgB;IAFT;EAD8D,CAAvD,CAAlB;EAMA,OAAON,GAAG,CAACO,IAAX;AACD,CARM;AAUP,OAAO,MAAMW,eAAe,GAAG,MAAOL,EAAP,IAAc;EAC3C,MAAMb,GAAG,GAAG,MAAMH,KAAK,CAACiB,GAAN,CAAW,oCAAmCD,EAAG,QAAjD,EAA0D;IAC1EV,OAAO,EAAE;MACPC,aAAa,EAAE,YAAYC,YAAY,CAACC,KADjC;MAEP,gBAAgB;IAFT;EADiE,CAA1D,CAAlB;EAMA,OAAON,GAAG,CAACO,IAAX;AACD,CARM"},"metadata":{},"sourceType":"module"}