{"ast":null,"code":"import { $authHost, $host } from \"./index\";\nimport jwt_decode from \"jwt-decode\";\nimport axios from \"axios\";\nexport const registration = async (login, password) => {\n  const response = await axios.put(\"http://localhost:5000/api/user/registration\", {\n    login: login,\n    password: password\n  }, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  localStorage.setItem(\"token\", response.token);\n  return jwt_decode(responce.token);\n};\nexport const log = async (login, password) => {\n  const responce = await axios.post(\"http://localhost:5000/api/user/login\", {\n    login: login,\n    password: password\n  }, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  localStorage.setItem(\"token\", responce.token);\n  return jwt_decode(responce.token);\n};\nexport const check = async () => {\n  const responce = await $authHost.get(\"api/user/auth\");\n  localStorage.setItem(\"token\", responce.token);\n  return jwt_decode(responce.token);\n};","map":{"version":3,"names":["$authHost","$host","jwt_decode","axios","registration","login","password","response","put","headers","localStorage","setItem","token","responce","log","post","check","get"],"sources":["C:/kpii/KYRSACH/note_app/client/src/apiCalls/userApi.js"],"sourcesContent":["import { $authHost, $host } from \"./index\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport axios from \"axios\";\r\n\r\nexport const registration = async (login, password) => {\r\n  const response = await axios.put(\r\n    \"http://localhost:5000/api/user/registration\",\r\n    {\r\n      login: login,\r\n      password: password,\r\n    },\r\n    { headers: { \"Content-Type\": \"application/json\" } }\r\n  );\r\n  localStorage.setItem(\"token\", response.token);\r\n  return jwt_decode(responce.token);\r\n  \r\n};\r\n\r\nexport const log = async (login, password) => {\r\n  const responce = await axios.post(\r\n    \"http://localhost:5000/api/user/login\",\r\n    {\r\n      login: login,\r\n      password: password,\r\n    },\r\n    { headers: { \"Content-Type\": \"application/json\" } }\r\n  );\r\n  localStorage.setItem(\"token\", responce.token);\r\n  return jwt_decode(responce.token);\r\n};\r\n\r\nexport const check = async () => {\r\n  const responce = await $authHost.get(\"api/user/auth\");\r\n  localStorage.setItem(\"token\", responce.token);\r\n  return jwt_decode(responce.token);\r\n};\r\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,KAApB,QAAiC,SAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;EACrD,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CACrB,6CADqB,EAErB;IACEH,KAAK,EAAEA,KADT;IAEEC,QAAQ,EAAEA;EAFZ,CAFqB,EAMrB;IAAEG,OAAO,EAAE;MAAE,gBAAgB;IAAlB;EAAX,CANqB,CAAvB;EAQAC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,QAAQ,CAACK,KAAvC;EACA,OAAOV,UAAU,CAACW,QAAQ,CAACD,KAAV,CAAjB;AAED,CAZM;AAcP,OAAO,MAAME,GAAG,GAAG,OAAOT,KAAP,EAAcC,QAAd,KAA2B;EAC5C,MAAMO,QAAQ,GAAG,MAAMV,KAAK,CAACY,IAAN,CACrB,sCADqB,EAErB;IACEV,KAAK,EAAEA,KADT;IAEEC,QAAQ,EAAEA;EAFZ,CAFqB,EAMrB;IAAEG,OAAO,EAAE;MAAE,gBAAgB;IAAlB;EAAX,CANqB,CAAvB;EAQAC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BE,QAAQ,CAACD,KAAvC;EACA,OAAOV,UAAU,CAACW,QAAQ,CAACD,KAAV,CAAjB;AACD,CAXM;AAaP,OAAO,MAAMI,KAAK,GAAG,YAAY;EAC/B,MAAMH,QAAQ,GAAG,MAAMb,SAAS,CAACiB,GAAV,CAAc,eAAd,CAAvB;EACAP,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BE,QAAQ,CAACD,KAAvC;EACA,OAAOV,UAAU,CAACW,QAAQ,CAACD,KAAV,CAAjB;AACD,CAJM"},"metadata":{},"sourceType":"module"}