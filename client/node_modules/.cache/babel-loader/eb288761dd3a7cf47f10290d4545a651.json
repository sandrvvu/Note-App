{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/list/listview\n */\nimport View from '../view';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '../focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport '../../theme/components/list/list.css';\n/**\n * The list view class.\n *\n * @extends module:ui/view~View\n * @implements module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable\n */\n\nexport default class ListView extends View {\n  /**\n   * @inheritDoc\n   */\n  constructor() {\n    super();\n    /**\n     * Collection of the child list views.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n    this.items = this.createCollection();\n    /**\n     * Tracks information about DOM focus in the list.\n     *\n     * @readonly\n     * @member {module:utils/focustracker~FocusTracker}\n     */\n\n    this.focusTracker = new FocusTracker();\n    /**\n     * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n     *\n     * @readonly\n     * @member {module:utils/keystrokehandler~KeystrokeHandler}\n     */\n\n    this.keystrokes = new KeystrokeHandler();\n    /**\n     * Helps cycling over focusable {@link #items} in the list.\n     *\n     * @readonly\n     * @protected\n     * @member {module:ui/focuscycler~FocusCycler}\n     */\n\n    this._focusCycler = new FocusCycler({\n      focusables: this.items,\n      focusTracker: this.focusTracker,\n      keystrokeHandler: this.keystrokes,\n      actions: {\n        // Navigate list items backwards using the arrowup key.\n        focusPrevious: 'arrowup',\n        // Navigate toolbar items forwards using the arrowdown key.\n        focusNext: 'arrowdown'\n      }\n    });\n    this.setTemplate({\n      tag: 'ul',\n      attributes: {\n        class: ['ck', 'ck-reset', 'ck-list']\n      },\n      children: this.items\n    });\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  render() {\n    super.render(); // Items added before rendering should be known to the #focusTracker.\n\n    for (const item of this.items) {\n      this.focusTracker.add(item.element);\n    }\n\n    this.items.on('add', (evt, item) => {\n      this.focusTracker.add(item.element);\n    });\n    this.items.on('remove', (evt, item) => {\n      this.focusTracker.remove(item.element);\n    }); // Start listening for the keystrokes coming from #element.\n\n    this.keystrokes.listenTo(this.element);\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  destroy() {\n    super.destroy();\n    this.focusTracker.destroy();\n    this.keystrokes.destroy();\n  }\n  /**\n   * Focuses the first focusable in {@link #items}.\n   */\n\n\n  focus() {\n    this._focusCycler.focusFirst();\n  }\n  /**\n   * Focuses the last focusable in {@link #items}.\n   */\n\n\n  focusLast() {\n    this._focusCycler.focusLast();\n  }\n\n}","map":{"version":3,"names":["View","FocusTracker","FocusCycler","KeystrokeHandler","ListView","constructor","items","createCollection","focusTracker","keystrokes","_focusCycler","focusables","keystrokeHandler","actions","focusPrevious","focusNext","setTemplate","tag","attributes","class","children","render","item","add","element","on","evt","remove","listenTo","destroy","focus","focusFirst","focusLast"],"sources":["C:/kpii/KYRSACH/note_app/client/node_modules/@ckeditor/ckeditor5-ui/src/list/listview.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/list/listview\n */\n\nimport View from '../view';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '../focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\n\nimport '../../theme/components/list/list.css';\n\n/**\n * The list view class.\n *\n * @extends module:ui/view~View\n * @implements module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable\n */\nexport default class ListView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * Collection of the child list views.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.items = this.createCollection();\n\n\t\t/**\n\t\t * Tracks information about DOM focus in the list.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * Helps cycling over focusable {@link #items} in the list.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this.items,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate list items backwards using the arrowup key.\n\t\t\t\tfocusPrevious: 'arrowup',\n\n\t\t\t\t// Navigate toolbar items forwards using the arrowdown key.\n\t\t\t\tfocusNext: 'arrowdown'\n\t\t\t}\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'ul',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-reset',\n\t\t\t\t\t'ck-list'\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: this.items\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Items added before rendering should be known to the #focusTracker.\n\t\tfor ( const item of this.items ) {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t}\n\n\t\tthis.items.on( 'add', ( evt, item ) => {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t} );\n\n\t\tthis.items.on( 'remove', ( evt, item ) => {\n\t\t\tthis.focusTracker.remove( item.element );\n\t\t} );\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tthis.focusTracker.destroy();\n\t\tthis.keystrokes.destroy();\n\t}\n\n\t/**\n\t * Focuses the first focusable in {@link #items}.\n\t */\n\tfocus() {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * Focuses the last focusable in {@link #items}.\n\t */\n\tfocusLast() {\n\t\tthis._focusCycler.focusLast();\n\t}\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,gBAAP,MAA6B,gDAA7B;AAEA,OAAO,sCAAP;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,QAAN,SAAuBJ,IAAvB,CAA4B;EAC1C;AACD;AACA;EACCK,WAAW,GAAG;IACb;IAEA;AACF;AACA;AACA;AACA;AACA;;IACE,KAAKC,KAAL,GAAa,KAAKC,gBAAL,EAAb;IAEA;AACF;AACA;AACA;AACA;AACA;;IACE,KAAKC,YAAL,GAAoB,IAAIP,YAAJ,EAApB;IAEA;AACF;AACA;AACA;AACA;AACA;;IACE,KAAKQ,UAAL,GAAkB,IAAIN,gBAAJ,EAAlB;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;;IACE,KAAKO,YAAL,GAAoB,IAAIR,WAAJ,CAAiB;MACpCS,UAAU,EAAE,KAAKL,KADmB;MAEpCE,YAAY,EAAE,KAAKA,YAFiB;MAGpCI,gBAAgB,EAAE,KAAKH,UAHa;MAIpCI,OAAO,EAAE;QACR;QACAC,aAAa,EAAE,SAFP;QAIR;QACAC,SAAS,EAAE;MALH;IAJ2B,CAAjB,CAApB;IAaA,KAAKC,WAAL,CAAkB;MACjBC,GAAG,EAAE,IADY;MAGjBC,UAAU,EAAE;QACXC,KAAK,EAAE,CACN,IADM,EAEN,UAFM,EAGN,SAHM;MADI,CAHK;MAWjBC,QAAQ,EAAE,KAAKd;IAXE,CAAlB;EAaA;EAED;AACD;AACA;;;EACCe,MAAM,GAAG;IACR,MAAMA,MAAN,GADQ,CAGR;;IACA,KAAM,MAAMC,IAAZ,IAAoB,KAAKhB,KAAzB,EAAiC;MAChC,KAAKE,YAAL,CAAkBe,GAAlB,CAAuBD,IAAI,CAACE,OAA5B;IACA;;IAED,KAAKlB,KAAL,CAAWmB,EAAX,CAAe,KAAf,EAAsB,CAAEC,GAAF,EAAOJ,IAAP,KAAiB;MACtC,KAAKd,YAAL,CAAkBe,GAAlB,CAAuBD,IAAI,CAACE,OAA5B;IACA,CAFD;IAIA,KAAKlB,KAAL,CAAWmB,EAAX,CAAe,QAAf,EAAyB,CAAEC,GAAF,EAAOJ,IAAP,KAAiB;MACzC,KAAKd,YAAL,CAAkBmB,MAAlB,CAA0BL,IAAI,CAACE,OAA/B;IACA,CAFD,EAZQ,CAgBR;;IACA,KAAKf,UAAL,CAAgBmB,QAAhB,CAA0B,KAAKJ,OAA/B;EACA;EAED;AACD;AACA;;;EACCK,OAAO,GAAG;IACT,MAAMA,OAAN;IAEA,KAAKrB,YAAL,CAAkBqB,OAAlB;IACA,KAAKpB,UAAL,CAAgBoB,OAAhB;EACA;EAED;AACD;AACA;;;EACCC,KAAK,GAAG;IACP,KAAKpB,YAAL,CAAkBqB,UAAlB;EACA;EAED;AACD;AACA;;;EACCC,SAAS,GAAG;IACX,KAAKtB,YAAL,CAAkBsB,SAAlB;EACA;;AA/GyC"},"metadata":{},"sourceType":"module"}